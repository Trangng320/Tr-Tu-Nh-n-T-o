# -*- coding: utf-8 -*-
"""Trí Tuệ Nhân Tạo 11/10/2022

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l0IxzIXo0z0kvO0zOIp15CvFQyswEYAI
"""

#ANN_ARTIFICIAL NEURAL NETWORK
#perception_binary network_classification
#multi layer perception
#ANN
#CNN (Convolutional NN)
#RNN
#Natural Language Processing
#Pre_Trained Network(Yolo)

import numpy as np
from sklearn.linear_model import Perceptron
x = [[0,0],[1,0],[0,1],[1,1]]
y=[0,1,1,1]
model = Perceptron()
model.fit(x,y)
print('Do chinh xac',model.score(x,y))
x_test = [[0,0.5],[0.9,-0.2],[1,-0.5],[0.2,0.7]]
y_test = model.predict(x_test)
print(y_test)

import numpy as np
from sklearn.linear_model import Perceptron
from sklearn.model_selection import train_test_split
import pandas as pd
url = "crabs.csv"
data = pd.read_csv(url)
x= data.drop(["speies","sex"],axis=True)
y = data["sex"]
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3)
print(x)

import numpy as np
from sklearn.linear_model import Perceptron
from sklearn.model_selection import train_test_split
import pandas as pd

url = "crabs.csv"
data = pd.read_csv(url)
x = data.drop(data.columns[[0,1,2]], axis=1)
y = data["sex"].replace(["M","F"],[1,0])

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3)

model = Perceptron()
model.fit(x_train, y_train)
print("Độ chính xác: ", model.score(x_train,y_train))

x_input = [[8.1,6.7,16.1,19,7], [9,8.5,19.3,22.7,7.7]]
y_pred = model.predict(x_input)

print(y_pred)

import numpy as np
from sklearn.linear_model import Perceptron
from sklearn.model_selection import train_test_split 
from sklearn.datasets import load_iris
import pandas as pd
url = '/content/iris.csv'
data = pd.read_csv(url)
data = data[:100]
x= data.drop(['variety'],axis = True)
y= data['variety'].replace(['Setosa','Versicolor','Virginica'],[1,0,0])
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3)
model = Perceptron()
model.fit(x_train,y_train)
print('Độ chính xác', model.score(x_train,y_train))
x_input = [[5.1,3.5,1.4,0.2],[5.1,2.5,3,1.1]]
y_output = model.predict(x_input)
print(y_output)

